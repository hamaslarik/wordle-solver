# -*- coding: utf-8 -*-
"""wordle_solver.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wfUEtHlqB3IpygHTomT_jhSLsDosYNWP
"""

from collections import Counter
from nltk.corpus import words
import nltk
nltk.download('words')
import string

wordlist = [word.upper() for word in words.words() if word.isalpha() and len(word)==5]
wordlist = list(set(wordlist))

first = set([letter for letter in string.ascii_uppercase])
n_1 = set()
second = set([letter for letter in string.ascii_uppercase])
n_2 = set()
third = set([letter for letter in string.ascii_uppercase])
n_3 = set()
fourth = set([letter for letter in string.ascii_uppercase])
n_4 = set()
fifth = set([letter for letter in string.ascii_uppercase])
n_5 = set()
must_have = Counter()
blacklist = set()

# initial guess is 'LATER' 

word = 'LATER'
game_end = False
s0 = False
s1 = False
s2 = False
s3 = False
s4 = False
ordinals = {0:[first, n_1, s0], 1:[second, n_2, s1], 2:[third, n_3, s2], 3:[fourth, n_4, s3], 4:[fifth, n_5, s4]}

for tries in range(5):
  if game_end == True:
    break
  while(True):
    print("""Enter the colors of the tiles returned by Wordle and press Enter:
      B = BLACK
      Y = YELLOW
      G = GREEN
    
      Example: YBGGB (first letter is yellow, second letter is black, third letter is green and so on...)
      """)
    color_string = input().upper()
    
    if len(color_string)==5 and set(color_string).issubset(set('BYG')):
      break
    else:
      print("Invalid input, try again")

  b_indices = []
  y_indices = []
  g_indices = []

  for i, letter in enumerate(color_string):
    if letter == 'Y':
      y_indices.append(i)
    elif letter == 'B':
      b_indices.append(i)
    else:
      g_indices.append(i)

  for i in b_indices:
    blacklist.add(word[i])
    if not s0:
      first.discard(word[i])
    if not s1:
      second.discard(word[i])
    if not s2:
      third.discard(word[i])
    if not s3:
      fourth.discard(word[i])
    if not s4:
      fifth.discard(word[i])

  must_have_copy = must_have.copy()

  for i in y_indices:
    ordinals[i][0].discard(word[i])
    ordinals[i][1].add(word[i])
    must_have[word[i]] += 1
    for j in range(5):
      if j != i and word[i] not in ordinals[j][1] and not ordinals[j][2]:
        ordinals[j][0].add(word[i])

  for i in g_indices:
    z = ordinals[i][0]
    z.clear()
    must_have[word[i]] += 1
    z.add(word[i])
    t = ordinals[i][2]
    t = True

  must_have = must_have - must_have_copy

  eligible_words = []

  for word in wordlist:
    letter_counts = Counter(word)
    if word[0] in first and word[1] in second and word[2] in third and word[3] in fourth and word[4] in fifth and set(must_have).issubset(set(word)) and all([letter_counts[letter]==must_have[letter] if letter in blacklist else letter_counts[letter]>=must_have[letter] for letter in (letter_counts.keys() & must_have.keys())]):
      eligible_words.append(word)
  
  print(len(eligible_words),' valid words found.')
  if len(eligible_words)>0:
    for i, word in enumerate(sorted(eligible_words)):
      print(word, end=' ')
      if (i+1)%20==0:
        print('\n')
    print('\n')
  else:
    break
  print("Was your chosen word the correct word?  Type 'y' for yes or 'n' for no and press Enter")
  while(True):
    reply = input()
    if reply == 'y':
      print('Congratulations!!!')
      game_end = True
      break
    elif reply == 'n':
      print('Type your chosen word from the above list and press Enter:')
      while(True):
        word = input().upper()
        if word in eligible_words:
          break
        else:
          print('This word is not present in the above list. Please type a word from the above list and press Enter:')
      break
    else:
      print("Invalid input, type 'y' for yes or 'n' for no and press Enter")
  wordlist = eligible_words

wordlist = [word.upper() for word in words.words() if word.isalpha() and len(word)==5]
wordlist = list(set(wordlist))

print('HEIST' in wordlist)